@use "sass:color";
@import 'mixins.scss';
@import 'breakpoints.scss';
@import 'colors.scss';
@import 'diag.scss';
:host {
    opacity: 100%;
    transition: none 1s cubic-bezier(.6,-0.28,.74,.05);
    min-width: 0;
    min-height: 0;
    max-height: 100%;
    max-width: 100%;
    margin: .5rem .25rem .25rem;
    border-top: 0;
    border-radius: .125rem;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    overflow-anchor: none;

    &[hidden] {
        display: none;
    }
    width: 100%;
	font-size: 1.4rem;
	color: var(--text-fg);
}

:host(.focused) .cm-cursor {
    border-left-color: #f00;
}

.cm-editor{
	@include fill-container-height;
    height: auto;
    max-height: 70%;
    border-top: 0.1rem solid #ccd;
    .cm-focused {
        border-top: 0.1rem solid #ff8;
    }
}


.terminal-out-container {
	@include for-tablet-landscape-up {
		overflow-y: auto;
	}

	display: flex;
	flex-direction: column-reverse;
}

.terminal-out {
	white-space: pre-wrap;
	word-break: break-all;
	padding: .2rem .5rem;
}

.terminal-out .cm-content {
		border-top: .1rem solid;
		border-bottom: .1rem solid;
		padding-left: .5rem;
}


.cm-editor .cm-line:first-child::before {
	content: "›››  "; //"〉"
}

.cm-editor .cm-line::before {
	content: "...  "; //"〉"
	letter-spacing: -.5rem;
	opacity: 1;
	transition: opacity .5s;
	margin-left: -.5rem;
}

:host([status="running"])  .cm-editor .cm-line::before,
:host([status="waiting"])  .cm-editor .cm-line::before,
:host([status="waiting"]) .cm-editor .cm-line:first-child::before {
	opacity: 0;
}

:host([status="waiting"])  .cm-cursor {
	border-left-color: #300;
}

:host([status="running"])  .cm-cursor {
	border-left-color: #030;
}

.terminal-anchor {
	overflow-anchor: auto;
	height: 1px;
}

.terminal-out .prompt {
	margin-left: -.2rem;
	color: $prompt-half;
	margin-right: .2rem;
}

.terminal-out .diag {
	border-left: .2rem solid currentcolor;
	padding-left: .3rem;
	margin-left: -.5rem;
}

.eval-result img {
	max-height: 1.1em; // *em*, since it should relative to local font size
	margin: .1em .2rem;
	vertical-align: middle;
}

.eval-result img:hover {
	max-height: auto; // *em*, since it should relative to local font size
	margin: .1em .2rem;
	vertical-align: middle;
}

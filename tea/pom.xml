<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.nuthatchery</groupId>
		<artifactId>turtleduck</artifactId>
		<version>0.1.1-SNAPSHOT</version>
	</parent>
	<artifactId>turtleduck-tea</artifactId>
	<packaging>jar</packaging>
	<name>TurtleDuck TeaVM Backend</name>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>turtleduck-anno</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>turtleduck-base</artifactId>
		</dependency>
		<!-- Emulator of Java class library for TeaVM -->
		<dependency>
			<groupId>org.teavm</groupId>
			<artifactId>teavm-classlib</artifactId>
			<version>${teavm.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- JavaScriptObjects (JSO) - a JavaScript binding for TeaVM -->
		<dependency>
			<groupId>org.teavm</groupId>
			<artifactId>teavm-jso-apis</artifactId>
			<version>${teavm.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Servlet 3.1 specification -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- Emulator of Java class library for TeaVM -->
		<dependency>
			<groupId>org.teavm</groupId>
			<artifactId>teavm-cli</artifactId>
			<version>${teavm.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<!-- arg>-verbose</arg -->
						<arg>-Xlint:all,-options,-path</arg>
						<arg>-parameters</arg>
						<arg>-g</arg>
					</compilerArgs>
					<generatedSourcesDirectory>${project.build.directory}/generated-sources/</generatedSourcesDirectory>
					<annotationProcessorPaths>
						<annotationProcessorPath>
							<groupId>${project.groupId}</groupId>
							<artifactId>turtleduck-anno</artifactId>
							<version>${project.version}</version>
						</annotationProcessorPath>
					</annotationProcessorPaths>
					<annotationProcessors>
						<annotationProcessor>
							turtleduck.annotations.ProcessAnnotations
						</annotationProcessor>
					</annotationProcessors>
				</configuration>
			</plugin>
			<!-- Configure TeaVM -->
			<plugin>
				<groupId>org.teavm</groupId>
				<artifactId>teavm-maven-plugin</artifactId>
				<version>${teavm.version}</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration,onIncremental?>
						<id>web-client</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<!-- Directory where TeaVM should put generated files. This configuration 
								conforms to the settings of the WAR plugin -->
							<targetDirectory>${project.build.directory}/classes/webroot/js</targetDirectory>

							<!-- Main class, containing static void main(String[]) -->
							<mainClass>turtleduck.tea.Client</mainClass>

							<!-- Whether TeaVM should produce minified JavaScript. Can reduce 
								JavaScript file size more than two times. TODO: set to true -->
							<minifying>false</minifying>

							<!-- Whether TeaVM should produce a debug information file for its 
								Eclipse plugin -->
							<debugInformationGenerated>true</debugInformationGenerated>

							<!-- whether TeaVM should build JavaScript incrementally -->
							<incremental>true</incremental>

							<!-- Whether TeaVM should produce source maps file -->
							<sourceMapsGenerated>false</sourceMapsGenerated>

							<!-- Whether TeaVM should also put source files into output directory, 
								for compatibility with source maps -->
							<sourceFilesCopied>true</sourceFilesCopied>

							<!-- how the runtime.js file should be copied: SEPARATE, MERGED, NONE -->
							<runtime>SEPARATE</runtime>

							<!-- Optimization level. Valid values are: SIMPLE, ADVANCED, FULL -->
							<optimizationLevel>ADVANCED</optimizationLevel>
							<stopOnErrors>false</stopOnErrors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/webroot</outputDirectory>
							<filters>
								<filter>default.properties</filter>
							</filters>
							<resources>
								<resource>
									<directory>src/main/webroot</directory>
									<includes>
										<include>index.html</include>
										<include>login.html</include>
										<include>pywebworker.js</include>
										<include>manifest.json</include>
									</includes>

									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>src/main/webroot</directory>
									<excludes>
										<exclude>index.html</exclude>
										<exclude>*.js</exclude>
										<exclude>*.scss</exclude>
										<exclude>*.txt</exclude>
										<exclude>manifest.json</exclude>
									</excludes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Configure Java compiler to use Java 8 syntax -->
			<!-- plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.1</version> 
				<configuration> <source>${java.version}</source> <target>${java.version}</target> 
				</configuration> </plugin -->

			<!-- Configure WAR plugin to include JavaScript files generated by TeaVM -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration></configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${project.build.directory}/classes/js</directory>
						</resource>
						<!-- resource> <directory>${project.basedir}/src/main/js/node_modules</directory> 
							</resource -->
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>webpack</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<?m2e execute onConfiguration,onIncremental?>
								<id>webpack</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>webpack</executable>
									<arguments></arguments>
									<systemProperties></systemProperties>
									<skip>false</skip>
								</configuration>
							</execution>
							<execution>
								<?m2e execute onConfiguration,onIncremental?>
								<id>rollup</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>rollup</executable>
									<arguments>-c
									</arguments>
									<systemProperties></systemProperties>
									<skip>false</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>devrunner</id>
			<activation>
				<property>
					<name>devrunner</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<executableDependency>
								<groupId>org.teavm</groupId>
								<artifactId>teavm-cli</artifactId>
							</executableDependency>
							<includeProjectDependencies>true</includeProjectDependencies>
							<includePluginDependencies>false</includePluginDependencies>
							<executable>java</executable>
							<mainClass>org.teavm.cli.TeaVMDevServerRunner</mainClass>
							<arguments>
								<argument>turtleduck.tea.Client</argument>
								<argument>--targetdir</argument>
								<argument>teavm</argument>
								<argument>--proxy-url</argument>
								<argument>http://localhost:9080/</argument>
								<argument>-ptarget/classes</argument>
								<argument>-i</argument>
								<argument>--auto-reload</argument>
								<argument>-v</argument>
							</arguments>
							<skip>false</skip>
							<systemProperties></systemProperties>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.teavm</groupId>
								<artifactId>teavm-cli</artifactId>
								<version>${teavm.version}</version>
								<type>jar</type>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>